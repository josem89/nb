{"Name":"HTML-to-PNG","Description":"","Script":"from SiemplifyUtils import output_handler\nfrom SiemplifyAction import SiemplifyAction\n#from TIPCommon import construct_csv, dict_to_flat, extract_configuration_param, extract_action_param\nimport json\nimport requests\nimport base64\n\nINTEGRATION_NAME = u\"Arnaud\"\nSCRIPT_NAME = u\"HTML-to-PNG\"\n\n@output_handler\ndef main():\n    siemplify = SiemplifyAction()\n    siemplify.script_name = SCRIPT_NAME\n    \n    output_message = \"Error occurred\"\n    result_value = \"Failure\"\n    \n    #json_output = {}\n    \n    api_endpoint = siemplify.parameters.get(\"Endpoint\")\n    token = siemplify.parameters.get(\"Bearer Token\")\n    message_text = siemplify.parameters.get(\"Text\")\n    \n    message_bytes = message_text.encode()\n    b64_text = base64.b64encode(message_bytes)\n    b64_decoded = b64_text.decode()\n    \n    if token:\n        headers = {\"Authorization\": \"Bearer {}\".format(token)}\n    else:\n        headers = {}\n    \n    siemplify.LOGGER.info(\"Started processing text\")\n    try:\n        payload = {\"message\": b64_decoded }\n        siemplify.LOGGER.info(\"Payload: {}\".format(payload))\n\n        response = requests.post(api_endpoint, data=payload, headers=headers)\n\n        if response.status_code == 200:\n                siemplify.LOGGER.info(\"Received screenshot\")\n                b64_binary = base64.b64encode(response.content)\n                html_value = '<img src=\"data:image/png;base64,{}\"/>'.format(b64_binary.decode())\n                #json_output[\"results\"].append({'url':get_entity_original_identifier(entity), 'screenshot': html_value})\n                output_message = \"Screenshot taken\"\n                result_value = html_value\n                    \n        elif response.status_code == 401:\n            output_message = \"Bearer token is invalid\"\n            siemplify.LOGGER.error(\"Response code {}. Reason: {}\".format(response.status_code, response.text))\n        else:\n            siemplify.LOGGER.error(\"Response code {}. Reason: {}\".format(response.status_code, response.text))\n    except Exception as e:\n        print(e)\n\n    siemplify.end(output_message, result_value)\n\nif __name__ == \"__main__\":\n    main()\n","IntegrationIdentifier":"Arnaud Email Utilities","ScriptResultName":"ScriptResult","DynamicResultsMetadata":[{"ResultName":"JsonResult","ResultExample":"{}","ShowResult":true}],"Creator":"d9d122b0-f8e6-4fff-be23-c9dbc7f2a22e","IsEnabled":true,"IsCustom":true,"IsSystem":false,"Version":141.0,"TimeoutSeconds":60,"IsAsync":false,"AsyncPollingIntervalInSeconds":3600,"TotalIntervalTimeoutForAsyncInSeconds":86400,"Parameters":[{"CustomActionId":0,"IsMandatory":true,"DefaultValue":"https://us-central1-static-resources-361419.cloudfunctions.net/html-to-png","Description":"The API endpoint being targeted","Name":"Endpoint","Value":"https://us-central1-static-resources-361419.cloudfunctions.net/html-to-png","Type":0,"OptionalValues":null,"OptionalValuesJson":null},{"CustomActionId":0,"IsMandatory":false,"DefaultValue":null,"Description":"Bearer Token","Name":"Bearer Token","Value":null,"Type":0,"OptionalValues":null,"OptionalValuesJson":null},{"CustomActionId":0,"IsMandatory":true,"DefaultValue":"<html><body>Hello there!</body></html>","Description":"Text to render as a PNG","Name":"Text","Value":"<html><body>Hello there!</body></html>","Type":0,"OptionalValues":null,"OptionalValuesJson":null}],"DefaultResultValue":"","PythonVersion":"None","SimulationData":{"Entities":null},"SimulationDataJson":null}