{"Name":"Take URL Screenshot","Description":"","Script":"from SiemplifyUtils import output_handler\nfrom SiemplifyAction import SiemplifyAction\nfrom SiemplifyDataModel import EntityTypes\n#from TIPCommon import construct_csv, dict_to_flat, extract_configuration_param, extract_action_param\nimport json\nimport requests\nimport base64\n\nINTEGRATION_NAME = u\"Arnaud\"\nSCRIPT_NAME = u\"URL Screenshot\"\n\ndef get_entity_original_identifier(entity):\n    return entity.additional_properties.get('OriginalIdentifier', entity.identifier)\n\n@output_handler\ndef main():\n    siemplify = SiemplifyAction()\n    siemplify.script_name = SCRIPT_NAME\n    \n    output_message = \"Error occurred\"\n    result_value = \"Failure\"\n    \n    json_output = {'results': []}\n    \n    suitable_entities = [entity for entity in siemplify.target_entities if entity.entity_type == EntityTypes.URL]\n\n    api_endpoint = siemplify.parameters.get(\"Endpoint\")\n    token = siemplify.parameters.get(\"Bearer Token\")\n    \n    if token:\n        headers = {\"Authorization\": \"Bearer {}\".format(token)}\n    else:\n        headers = {}\n    \n    for entity in suitable_entities:\n        siemplify.LOGGER.info(\"Started processing URL: {}\".format(get_entity_original_identifier(entity)))\n        try:\n            payload = {\"url\": get_entity_original_identifier(entity)}\n            response = requests.post(api_endpoint, data=payload, headers=headers)\n\n            if response.status_code == 200:\n                    b64_binary = base64.b64encode(response.content)\n                    html_value = '<img src=\"data:image/png;base64,{}\"/>'.format(b64_binary.decode())\n                    json_output[\"results\"].append({'url':get_entity_original_identifier(entity), 'screenshot': html_value})\n                    output_message = \"URL screenshot taken\"\n                    result_value = \"Success\"\n                    siemplify.LOGGER.info(\"Successfully enriched {}\".format(get_entity_original_identifier(entity)))\n            elif response.status_code == 401:\n                output_message = \"Bearer token is invalid\"\n                siemplify.LOGGER.error(\"Response code {}. Reason: {}\".format(response.status_code, response.text))\n            else:\n                siemplify.LOGGER.error(\"Response code {}. Reason: {}\".format(response.status_code, response.text))\n                json_output[\"results\"].append({'url':get_entity_original_identifier(entity), 'error': response.text})\n                \n\n        except HTTPError as e:\n            status_code = e.response.status_code\n            siemplify.LOGGER.error(e.response.text)\n        \n        \n    siemplify.result.add_result_json(json_output)\n    siemplify.end(output_message, result_value)\n\nif __name__ == \"__main__\":\n    main()\n","IntegrationIdentifier":"Arnaud Email Utilities","ScriptResultName":"ScriptResult","DynamicResultsMetadata":[{"ResultName":"JsonResult","ResultExample":"{}","ShowResult":true}],"Creator":"d9d122b0-f8e6-4fff-be23-c9dbc7f2a22e","IsEnabled":true,"IsCustom":true,"IsSystem":false,"Version":107.0,"TimeoutSeconds":120,"IsAsync":false,"AsyncPollingIntervalInSeconds":3600,"TotalIntervalTimeoutForAsyncInSeconds":86400,"Parameters":[{"CustomActionId":0,"IsMandatory":true,"DefaultValue":"https://us-central1-static-resources-361419.cloudfunctions.net/url-to-png","Description":"The API endpoint being targeted","Name":"Endpoint","Value":"https://us-central1-static-resources-361419.cloudfunctions.net/url-to-png","Type":0,"OptionalValues":null,"OptionalValuesJson":null},{"CustomActionId":0,"IsMandatory":false,"DefaultValue":null,"Description":"Bearer Token","Name":"Bearer Token","Value":null,"Type":0,"OptionalValues":null,"OptionalValuesJson":null}],"DefaultResultValue":"","PythonVersion":"None","SimulationData":{"Entities":null},"SimulationDataJson":null}